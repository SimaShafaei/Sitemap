This algorithm utilizes three input parameters to generate task models. The first parameter, 'n_task,' denotes the number of tasks within the system. For each task, the algorithm employs the second and third parameters, 'mu_Npage' and 'sd_Npage,' along with a normal distribution to determine the number of pages to request from the server while performing that task. The primary objective of the algorithm is to establish a set of task models that adhere to a unified website structure. To accomplish this, the algorithm initially generates a random list of pages as the task model for the first task. This list outlines the sequence of pages that users must navigate, starting from the home page and concluding at the final goal. However, the approach differs for subsequent tasks. For each new task with 'Np' pages, the algorithm begins by randomly selecting one of the pages whose depth from the root is less than 'Np.' Let's refer to this page as 'P.' Consequently, the clickstream path for this new task is shared from the root to 'P,' while the remaining pages form a new branch extending from 'P'.